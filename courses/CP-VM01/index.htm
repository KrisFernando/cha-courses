<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Compute in the Cloud</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" rel="stylesheet"
    crossorigin="anonymous">
  <link rel="stylesheet" href="../../css/course.css">
  <link rel="apple-touch-icon" sizes="180x180" href="../../img/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="../../img/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="../../img/favicon-16x16.png">
  <link rel="manifest" href="../../img/site.webmanifest">  
</head>

<body class="full-screen">
  <div class="container-fluid">
    <div class="row">
      <div class="col-9">
        <div class="d-flex">
          <button id="home" type="button" class="btn btn-primary btn-md">
            <i class="fa fa-home"></i>
          </button>
          <h1 id="title" style="margin-left: 15px;">Compute in the Cloud</h1>
        </div>
      </div>
      <div class="col-3">
        <ul class="nav nav-tabs">
          <li class="nav-item">
            <a id="learn" class="nav-link active">Learning Material</a>
          </li>
          <li class="nav-item">
            <a id="quiz" class="nav-link disabled">Knowledge Check</a>
          </li>
        </ul>
      </div>
    </div>
    <div class="row h-90 learn">
      <div class="col-12 col-sm-9">
        <div id="carouselExampleIndicators" class="carousel slide carousel-fade" data-bs-interval="false"
          data-bs-ride="false" data-bs-touch="false">
          <div class="carousel-inner">
            <div id="slide1" class="carousel-item active" data-index="1">
              <img src="../../img/course/tutorials/Learning.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide2" class="carousel-item" data-index="2">
              <img src="img/2.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide3" class="carousel-item" data-index="3">
              <img src="img/3.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide4" class="carousel-item" data-index="4">
              <img src="img/4.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide5" class="carousel-item" data-index="5">
              <img src="img/5.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide6" class="carousel-item" data-index="6">
              <img src="img/6.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide7" class="carousel-item" data-index="7">
              <img src="img/7.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide8" class="carousel-item" data-index="8">
              <img src="img/8.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide9" class="carousel-item" data-index="9">
              <img src="img/9.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide10" class="carousel-item" data-index="10">
              <img src="img/10.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide11" class="carousel-item" data-index="11">
              <img src="img/11.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide12" class="carousel-item" data-index="12">
              <img src="img/12.jpg" class="d-block w-100" alt="...">
            </div>
            <div id="slide13" class="carousel-item" data-index="13">
              <img src="img/13.jpg" class="d-block w-100" alt="...">
            </div>
            <!--- make this next section# 1 more than the previous one (eg. if previous is section10 the below one would be section11) -->
            <div id="slide14" class="carousel-item" data-index="14">
              <img src="../../img/course/tutorials/Knowledge.jpg" class="d-block w-100" alt="...">
            </div>
          </div>
        </div>
      </div>
      <div class="col-12 col-sm-3">
        <div id="content" class="overflow-auto">
          <section id="section1" class="learnsection active">
            <h2>Welcome!</h2>
            <p>Here is a quick tutorial before you begin:</p>
            <ul class="no-bullets">
              <li>1. Press the Play button to listen to the content</li>
              <li>2. Press the Stop button to stop the audio</li>
              <li>3. Press the Backward arrow button to go to the previous slide</li>
              <li>4. Press the Next arrow button to go to the next slide</li>
            </ul>
          </section>

          <section id="section2" class="learnsection">
            <h2>Compute in the Cloud</h2>
            <p>
              <b>Course Objective</b>
              This course aims to provide a comprehensive understanding of compute in the cloud, enabling students to
              effectively utilize cloud-based computing resources for various applications.
            <p>Topics to cover:</p>
            <ul>
              <li>Virtual Machine Components</li>
              <li>Optimization by Workload</li>
              <li>Virtual Machine Images</li>
              <li>Connecting to Virtual Machines</li>
              <li>Installations on Virtual Machines</li>
              <li>Scalability</li>
              <li>Distribute Requests</li>
              <li>Various Compute Options</li>
              <li>Compute Management and Maintenance</li>
              <li>Billing Options for Compute</li>
              <li>Conclusion</li>
            </ul>
            </p>

            <b>What is Compute in the Cloud?</b>
            <p>Compute in the cloud refers to the ability to access and utilize computing resources, such as processing
              power, memory, and storage, over the internet. This model eliminates the need for on-premises hardware and
              infrastructure, providing flexibility, scalability, and cost-effectiveness.</p>

          </section>

          <section id="section3" class="learnsection">
            <h2>Virtual Machine Components</h2>

            <p>Virtual machines are software-based emulations of physical computers. They are composed of several key
              components:</p>

            <b>CPU</b>
            <p>The CPU, or central processing unit, is the brain of the virtual machine. It performs calculations and
              executes instructions. The amount of CPU power allocated to a virtual machine can significantly impact its
              performance.</p>

            <b>Memory</b>
            <p>Memory, or RAM, is used by the virtual machine to store data and instructions temporarily. The more
              memory allocated to a virtual machine, the more applications it can run simultaneously and the faster it
              can perform tasks.</p>

            <b>Storage</b>
            <p>Storage is used to store data and applications permanently. Virtual machines typically have virtual hard
              disks, which can be connected to various storage types, such as SSDs or HDDs.</p>

            <b>Network</b>
            <p>The network interface allows the virtual machine to communicate with other devices on the network. This
              includes connecting to other virtual machines, physical servers, and the internet.</p>

            <b>GPU (Optional)</b>
            <p>Some virtual machines may have access to a GPU, or graphics processing unit. GPUs are specialized
              hardware that can accelerate certain tasks, such as rendering graphics or performing machine learning
              calculations.</p>

            <p>The specific configuration of these components will vary depending on the requirements of the virtual
              machine and the resources available on the underlying physical server.</p>

          </section>

          <section id="section4" class="learnsection">
            <h2>Optimization by Workload</h2>

            <p>Below are some examples of workloads you might run on virtual machines. The way we provision VM for these
              workloads will differ based on the end function.</p>
            <b>Compute Optimized</b>
            <p>Designed for compute-intensive workloads that require high CPU performance.</p>
            <p>Example applications: Web servers, application servers, batch processing, and scientific simulations.</p>

            <b>Memory Optimized</b>
            <p>Optimized for memory-intensive workloads that require large amounts of RAM.</p>
            <p>Example applications: In-memory databases, data warehousing, real-time analytics, and machine learning.
            </p>

            <b>Storage Optimized</b>
            <p>Optimized for storage-intensive workloads that require high I/O performance.</p>
            <p>Example applications: Databases, content delivery networks (CDNs), and big data analytics.</p>

            <b>Accelerated Computing</b>
            <p>Equipped with specialized hardware, such as GPUs or TPUs, for accelerating compute-intensive tasks.</p>
            <p>Example applications: Machine learning, deep learning, scientific simulations, and video processing.</p>

            <b>General Purpose</b>
            <p>Balanced instances suitable for a variety of workloads.</p>
            <p>Example applications: Web servers, application servers, development environments, and small-scale
              databases.</p>

          </section>

          <section id="section5" class="learnsection">
            <h2>Virtual Machine Images</h2>

            <p>VM images are pre-configured templates that contain the operating system, applications, and data for a
              virtual machine. They allow you to quickly create new virtual machines without having to manually install
              and configure everything from scratch.</p>

            <b>Types of VM Images</b>
            <ul>
              <li>Operating System Images: These images only contain the operating system and basic drivers. You can
                customize them by installing additional applications and configuring settings.</li>
              <li>Application Images: These images contain the operating system and pre-installed applications. They are
                often used for specific use cases, such as web servers or databases.</li>
              <li>Golden Images: These images are highly customized templates that include the operating system,
                applications, and configuration settings. They are often used for production environments to ensure
                consistency and security.</li>
            </ul>

            <b>Choosing the Right VM Image</b>
            <p>When selecting a VM image, consider the following factors:</p>
            <ul>
              <li>Operating system: Choose an operating system that is compatible with your applications and meets your
                performance requirements.</li>
              <li>Applications: If you need specific applications pre-installed, look for an image that includes them.
              </li>
              <li>Configuration: Consider the default configuration settings of the image and whether they meet your
                needs.</li>
              <li>Security: Ensure that the image is up-to-date with security patches and vulnerabilities.</li>
            </ul>

            <b>Using VM Images</b>
            <p>To create a new virtual machine from an image, you typically select the image and specify the desired
              resources, such as CPU, memory, and storage. The cloud provider will then provision the virtual machine
              based on the image and the specified resources.</p>

            <p>Once the virtual machine is created, you can access it using a remote connection and customize it further
              as needed.</p>
          </section>

          <section id="section6" class="learnsection">
            <h2>Connecting to Virtual Machines</h2>

            <p>Remote connections allows you to access and manage virtual machines from a remote location. This is
              essential for cloud computing, as virtual machines are often hosted in data centers that may be physically
              distant from your location.</p>

            <b>Common Remote Connection Protocols</b>
            <ul>
              <li>Remote Desktop Protocol (RDP): Primarily used for Windows-based virtual machines. It provides a
                graphical user interface for accessing the VM's desktop.</li>
              <li>Secure Shell (SSH): Used for connecting to Linux-based virtual machines. It provides a command-line
                interface for managing the VM.</li>
            </ul>

            <b>Configuring Remote Access</b>
            <p>To enable remote access to a virtual machine, you typically need to configure the following settings:</p>
            <ul>
              <li>Network rules: Allow incoming traffic on the appropriate ports (e.g., port 3389 for RDP, port 22 for
                SSH).</li>
              <li>Authentication: Set up user accounts and passwords for accessing the VM.</li>
              <li>Security: Implement security measures such as firewalls and encryption to protect the VM from
                unauthorized access.</li>
            </ul>

            <b>Using Remote Connection Tools</b>
            <p>Once you have configured remote access, you can use a remote connection tool to connect to the VM.
              Popular tools include:</p>
            <ul>
              <li>Remote Desktop Connection (Windows): Built-in tool for connecting to Windows-based VM.</li>
              <li>PuTTY (Linux/Windows): SSH client for connecting to Linux-based VM.</li>
            </ul>

            <p>By using remote connections, you can manage your virtual machines from anywhere with an internet
              connection, making it convenient for tasks such as administration, troubleshooting, and application
              deployment.</p>

          </section>

          <section id="section7" class="learnsection">
            <h2>Installations on Virtual Machines</h2>

            <p>Once you have created a virtual machine, you can customize it by installing and configuring custom
              applications. This can be done manually, using scripts, or by deploying a pre-configured image.</p>

            <b>Manual Configuration</b>
            <p>To manually configure a custom application, you typically follow these steps:</p>
            <ul>
              <li>Download the application: Obtain the dependancies and installation files for the application.</li>
              <li>Run the installer: Execute the installation program and follow the on-screen instructions.</li>
              <li>Configure the application: Set up any necessary settings or parameters for the application.</li>
            </ul>

            <b>Using Scripts</b>
            <p>Automation scripts can be used to automate the installation and configuration of applications on virtual
              machines. This can save time and reduce errors.</p>
            <ul>
              <li>Shell scripts: Use scripts written in Bash, PowerShell, or other shell languages.</li>
              <li>Ansible: A popular configuration management tool that can be used to automate tasks on multiple VM.
              </li>
              <li>Chef and Puppet: Other configuration management tools that can be used for automating application
                deployment.</li>
            </ul>

            <b>Using Golden Images</b>
            <p>Golden images are pre-configured virtual machine images that include the operating system, applications,
              and configuration settings. They can be used to quickly deploy new virtual machines with the desired
              applications already installed.</p>
            <ul>
              <li>Create a golden image: Configure a virtual machine with the desired applications and settings, then
                create an image from it.</li>
              <li>Deploy the image: Use the image to create new virtual machines with the same configuration.</li>
            </ul>

            <p>By following these methods, you can effectively configure virtual machines with custom applications to
              meet your specific needs.</p>

          </section>

          <section id="section8" class="learnsection">
            <h2>Scalability</h2>

            <p>Scaling is the ability to adjust the resources allocated to meet changing demands. There are two main
              types of scaling: vertical and horizontal.</p>

            <b>Vertical Scaling</b>
            <p>Vertical scaling involves increasing or decreasing the resources allocated to a single virtual machine.
              This can include adding more CPU cores, memory, or storage.</p>

            <p>Benefits of vertical scaling:</p>
            <ul>
              <li>Simplicity: Easier to manage than horizontal scaling.</li>
              <li>Performance: Can provide a performance boost for certain workloads.</li>
            </ul>

            <p>Limitations of vertical scaling:</p>
            <ul>
              <li>Hardware constraints: There may be limitations on how much resources can be allocated to a single
                virtual machine.</li>
              <li>Cost: Increasing resources can be expensive, especially for high-performance instances.</li>
            </ul>
            </p>

            <b>Horizontal Scaling</b>
            <p>Horizontal scaling involves adding or removing multiple virtual machines to a cluster. This allows for
              more flexibility and scalability, as resources can be added or removed based on demand.</p>

            <p>Benefits of horizontal scaling:</p>
            <ul>
              <li>Scalability: Can handle much larger workloads than vertical scaling.</li>
              <li>Fault tolerance: Multiple virtual machines can provide redundancy and improve availability.</li>
              <li>Cost-effectiveness: Can be more cost-effective for large-scale workloads.</li>
              <li>Auto-scaling: Can be triggered to grow or shrink the cluster based on demand or a schedule.</li>
            </ul>

            <p>Limitations of horizontal scaling:</p>
            <ul>
              <li>Complexity: Managing a cluster of virtual machines can be more complex than managing a single VM.</li>
              <li>Network overhead: Increased network traffic between virtual machines can impact performance.</li>
            </ul>
            </p>

            <p>The best scaling strategy depends on the specific needs of your workload. In many cases, a combination of
              vertical and horizontal scaling can be used to achieve optimal performance and cost-effectiveness.</p>

          </section>

          <section id="section9" class="learnsection">
            <h2>Distribute Requests</h2>

            <p>Load balancers are essential components of cloud infrastructure that distribute incoming requests (traffic) across
              multiple servers (VM). They improve application performance, scalability, and reliability.</p>

            <b>Types of Load Balancers</b>
            <ul>
              <li>Application load balancers: Distribute traffic based on application-layer information, such as HTTP
                headers or URL paths.</li>
              <li>Network load balancers: Distribute traffic based on network-layer information, such as IP addresses
                and ports.</li>
            </ul>

            <b>Load Balancing Algorithms</b>
            <ul>
              <li>Round robin: Distributes traffic evenly across servers in a circular fashion.</li>
              <li>Least connections: Directs traffic to the server with the fewest active connections.</li>
              <li>Weighted least connections: Assigns weights to servers to prioritize certain servers or allocate more
                traffic to servers with higher capacity.</li>
              <li>IP hash: Distributes traffic based on the client's IP address.</li>
            </ul>

            <b>Benefits of Load Balancers</b>
            <ul>
              <li>Improved performance: Reduces latency and response times by distributing traffic across multiple
                servers.</li>
              <li>Scalability: Allows for easy horizontal scaling by adding or removing servers from the load balancer
                pool.</li>
              <li>High availability: Ensures that applications remain accessible even if individual servers fail.</li>
              <li>Load balancing: Distributes traffic evenly across servers, preventing any single server from becoming
                overloaded.</li>
            </ul>

            <p>Load balancers are a critical component of cloud infrastructure, providing essential benefits for
              improving application performance, scalability, and reliability.</p>

          </section>

          <section id="section10" class="learnsection">
            <h2>Various Compute Options</h2>

            <p>Virtual machines (VM), containers, and functions are all used to isolate and manage applications in cloud
              environments. However, they have distinct characteristics and use cases.</p>

            <b>Virtual Machines (VM)</b>
            <p>VM are complete virtualized computer systems that include their own operating system, applications, and
              libraries. They offer the highest level of isolation and control, but can be resource-intensive.</p>

            <b>Containers</b>
            <p>Containers are lightweight, isolated environments that share the host operating system. They package
              applications and their dependencies into a single unit, making them portable and efficient. Containers are
              often used for microservices architectures and application development.</p>

            <b>Functions</b>
            <p>Functions are serverless computing units that execute code in response to events. They are ideal for
              event-driven applications and don't require ongoing management of infrastructure.</p>

            <p>You will learn more about containers and serverless functions in later programs and courses.</p>
          </section>

          <section id="section11" class="learnsection">
            <h2>Compute Management and Maintenance</h2>

            <p>Cloud computing offers different levels of management for compute resources, ranging from self-managed to
              fully serverless. The appropriate level depends on your organization's needs, expertise, and desired level
              of control.</p>

            <b>Self-Managed</b>
            <p>In this model, you have complete control over the virtual machines right down to the operating system.
              You are responsible for managing tasks such as provisioning, configuring, patching, and monitoring.</p>
            <p><b>Ideal for:</b> Organizations with in-house expertise and a desire for maximum control.</p>

            <b>Managed</b>
            <p>Managed services provide automated management for certain aspects of your virtual machines, such as
              patching, monitoring, and scaling. You retain control over the configuration and application deployment.
            </p>
            <p><b>Ideal for:</b> Organizations that want to reduce the operational overhead of managing virtual machines.</p>

            <b>Serverless</b>
            <p>Serverless computing eliminates the need to manage virtual machines entirely. You simply write code
              functions and deploy them to the cloud. The cloud provider automatically manages the underlying
              infrastructure and scales resources based on demand.</p>
            <p><b>Ideal for:</b> Event-driven applications, microservices, and workloads that don't require constant resource
              allocation.</p>

            <p>The choice between self-managed, managed, and serverless compute depends on your specific requirements
              and preferences. Consider factors such as your organization's expertise, budget, and desired level of
              control.</p>
          </section>

          <section id="section12" class="learnsection">
            <h2>Billing Options for Compute</h2>

            <p>Cloud providers offer various billing options for compute resources. The choice of billing model depends on your usage patterns and cost management preferences.</p>
            
            <b>On-Demand Pricing</b>
            <p>This is the most common billing model, where you pay for the resources you use on an hourly basis. It's suitable for workloads with unpredictable usage patterns.</p>
            
            <b>Reserved Instances</b>
            <p>Reserved instances provide discounted rates over a one or three-year term and instance type. They are ideal for workloads with predictable usage patterns.</p>
            
            <b>Savings Plans</b>
            <p>Savings plans offer a discounted rate for a specified amount of compute capacity over a one or three-year term. They are suitable for workloads with consistent usage patterns.</p>
            
            <b>Spot Instances</b>
            <p>Spot instances are excess capacity available at a significant discount. However, they can be terminated at any time if the price rises above your bid. They are ideal for non-critical workloads that can tolerate interruptions.</p>
            
            <b>Dedicated Hosts</b>
            <p>Dedicated hosts provide physical servers that are exclusively used by your instances. This can be beneficial for workloads with strict isolation requirements or compliance regulations.</p>
            
            <b>Considerations When Choosing a Billing Model:</b>
            <ul>
            <li>Usage patterns: Analyze your workload to determine the most suitable billing model.</li>
            <li>Budget constraints: Consider the upfront costs and long-term savings associated with each model.</li>
            <li>Flexibility: Evaluate the flexibility of each model to accommodate changing workloads.</li>
            <li>Compliance requirements: Determine if any compliance regulations dictate the use of specific billing models.</li>
            </ul>
            
            <p>By carefully considering these factors, you can select the billing model that best aligns with your cloud computing needs and budget.</p>
            
          </section>

          <section id="section13" class="learnsection">
            <h2>Conclusion</h2>
            <p>Cloud computing has revolutionized the way businesses and individuals operate, offering unprecedented flexibility, scalability, and cost-effectiveness. By understanding the fundamentals of virtual machines, cloud services, and deployment models, you can effectively leverage the power of the cloud to drive innovation and achieve your goals.</p>
            <p>Remember to carefully evaluate your workload requirements and choose the appropriate cloud resources and billing models to optimize your cloud environment. By following best practices and staying updated on the latest trends, you can maximize the benefits of cloud computing and unlock its full potential.</p>
          </section>

          <!--- make this next section# 1 more than the previous one (eg. if previous is section10 the below one would be section11) -->
          <section id="section14" class="learnsection">
            <h2>Congratulations!</h2>
            <p>What is next for you? Let's do a knowledge check to see if you completely grasped the concepts you
              just learned.</p>
            <ul class="no-bullets">
              <li>1. Click on the Knowledge Check tab on the top right of your screen and take the quiz.</li>
              <li>2. Click on the Learning Material to return for any help.</li>
            </ul>
            <p>If you require additional help please reach out in any of the Chat Groups.</p>
          </section>
        </div>
      </div>
    </div>
    <div class="row h-90 quiz hide">
      <div class="col-12 col-sm-9">
        <div id="quizcontent" class="overflow-auto">
          <section id="q1" class="questions active" data-index="1">
            <h3>1) What are 2 different ways to install custom applications?</h3>

            <input type="radio" name="q1a" class="answer q1 incorrect" id="q1-1">
            <input type="radio" name="q1a" class="answer q1 correct" id="q1-2">
            <input type="radio" name="q1a" class="answer q1 incorrect" id="q1-3">
            <input type="radio" name="q1a" class="answer q1 incorrect" id="q1-4">

            <label for="q1-1" class="box q1-1">
              <div class="course"> <span class="circle"></span> <span class="subject"> a) RDP or SSH. </span> </div>
            </label>
            <label for="q1-2" class="box q1-2">
              <div class="course"> <span class="circle"></span> <span class="subject"> b) Manually entering commands or using scripts. </span> </div>
            </label>
            <label for="q1-3" class="box q1-3">
              <div class="course"> <span class="circle"></span> <span class="subject"> c) Vertical or Horizontal Scaling. </span> </div>
            </label>
            <label for="q1-4" class="box q1-4">
              <div class="course"> <span class="circle"></span> <span class="subject"> d) Self Managed or Serverless. </span></div>
            </label>
            <div class="submit">
              <button type="button" class="btn btn-primary btn-md quizbutton" id="q1b" onclick="">Submit</button>
            </div>
          </section>

          <section id="q2" class="questions" data-index="2">
            <h3>2) What are 3 billing options?</h3>

            <input type="radio" name="q2a" class="answer q2 incorrect" id="q2-1">
            <input type="radio" name="q2a" class="answer q2 incorrect" id="q2-2">
            <input type="radio" name="q2a" class="answer q2 incorrect" id="q2-3">
            <input type="radio" name="q2a" class="answer q2 correct" id="q2-4">

            <label for="q2-1" class="box q2-1">
              <div class="course"> <span class="circle"></span> <span class="subject"> a) On demand, Spot Pricing, and Pay Later. </span> </div>
            </label>
            <label for="q2-2" class="box q2-2">
              <div class="course"> <span class="circle"></span> <span class="subject"> b) Spot Pricing, Savings Plans, and Credit Card. </span> </div>
            </label>
            <label for="q2-3" class="box q2-3">
              <div class="course"> <span class="circle"></span> <span class="subject"> c) Spot Pricing, Peak Pricing, and Reserved Instances. </span> </div>
            </label>
            <label for="q2-4" class="box q2-4">
              <div class="course"> <span class="circle"></span> <span class="subject"> d) On Demand, Spot Pricing and Dedicated Hosts. </span></div>
            </label>
            <div class="submit">
              <button type="button" class="btn btn-primary btn-md quizbutton" id="q2b" onclick="">Submit</button>
            </div>
          </section>

          <section id="q3" class="questions" data-index="3">
            <h3>3) What is the difference between Managed and Serverless?</h3>

            <input type="radio" name="q3a" class="answer q3 correct" id="q3-1">
            <input type="radio" name="q3a" class="answer q3 incorrect" id="q3-2">
            <input type="radio" name="q3a" class="answer q3 incorrect" id="q3-3">
            <input type="radio" name="q3a" class="answer q3 incorrect" id="q3-4">

            <label for="q3-1" class="box q3-1">
              <div class="course"> <span class="circle"></span> <span class="subject"> a) Managed is paid by the hour and Serverless is paid by invocation. </span> </div>
            </label>
            <label for="q3-2" class="box q3-2">
              <div class="course"> <span class="circle"></span> <span class="subject"> b) Managed is paid by invocation and Serverless is paid by the hour. </span> </div>
            </label>
            <label for="q3-3" class="box q3-3">
              <div class="course"> <span class="circle"></span> <span class="subject"> c) Serverless requires backup schedules and management. </span> </div>
            </label>
            <label for="q3-4" class="box q3-4">
              <div class="course"> <span class="circle"></span> <span class="subject"> d) Managed are only functions and Serverless are complete Applications. </span></div>
            </label>
            <div class="submit">
              <button type="button" class="btn btn-primary btn-md quizbutton" id="q3b" onclick="">Submit</button>
            </div>
          </section>

          <section id="q4" class="questions" data-index="4">
            <h3>4) How do Containers differ to Virtual Machines?</h3>

            <input type="radio" name="q4a" class="answer q4 incorrect" id="q4-1">
            <input type="radio" name="q4a" class="answer q4 correct" id="q4-2">
            <input type="radio" name="q4a" class="answer q4 incorrect" id="q4-3">
            <input type="radio" name="q4a" class="answer q4 incorrect" id="q4-4">

            <label for="q4-1" class="box q4-1">
              <div class="course"> <span class="circle"></span> <span class="subject"> a) Containers isolate resources directly from the Hypervisor. </span> </div>
            </label>
            <label for="q4-2" class="box q4-2">
              <div class="course"> <span class="circle"></span> <span class="subject"> b) Containers share resources from the host Operating System. </span> </div>
            </label>
            <label for="q4-3" class="box q4-3">
              <div class="course"> <span class="circle"></span> <span class="subject"> c) Containers are Functions that response to events. </span> </div>
            </label>
            <label for="q4-4" class="box q4-4">
              <div class="course"> <span class="circle"></span> <span class="subject"> d) Containers control the hardware resources and share them for Virtual Machines. </span></div>
            </label>
            <div class="submit">
              <button type="button" class="btn btn-primary btn-md quizbutton" id="q4b" onclick="">Submit</button>
            </div>
          </section>

          <section id="q5" class="questions" data-index="5">
            <h3>5) What are Load Balancers?</h3>

            <input type="radio" name="q5a" class="answer q5 incorrect" id="q5-1">
            <input type="radio" name="q5a" class="answer q5 incorrect" id="q5-2">
            <input type="radio" name="q5a" class="answer q5 incorrect" id="q5-3">
            <input type="radio" name="q5a" class="answer q5 correct" id="q5-4">

            <label for="q5-1" class="box q5-1">
              <div class="course"> <span class="circle"></span> <span class="subject"> a) Increasing or decreasing the resources allocated to a single Virtual Machine. </span> </div>
            </label>
            <label for="q5-2" class="box q5-2">
              <div class="course"> <span class="circle"></span> <span class="subject"> b) Adding or Removing multiple Virtual Machines to a cluster. </span> </div>
            </label>
            <label for="q5-3" class="box q5-3">
              <div class="course"> <span class="circle"></span> <span class="subject"> c) Recieve incoming requests from multiple Virtual Machines. </span> </div>
            </label>
            <label for="q5-4" class="box q5-4">
              <div class="course"> <span class="circle"></span> <span class="subject"> d) Distribute incoming requests across multiple Virtual Machines. </span></div>
            </label>
            <div class="submit">
              <button type="button" class="btn btn-primary btn-md quizbutton" id="q5b" onclick="">Submit</button>
            </div>
          </section>


          <section id="q6" class="questions" data-index="6">
            <canvas id="confetti"></canvas>
            <h3>Congratulations! Your Knowledge is 100%</h3>
            <p>You can now proceed to the next course on your learning path. If one is not availble please inquire with
              the community. We are releasing new courses periodicly, so keep a lookout for them.</p>
            <p>Click on the Home Icon at the top left of your screen. <i class="fa fa-home"></i> </p>
            <p>Good luck! Keep learning and growing!</p>
          </section>
        </div>
      </div>
      <div class="col-12 col-sm-3">
        <div id="quizanswers" class="overflow-auto">
          <section id="quizhint"></section>
        </div>
      </div>
    </div>
    <div class="row controls">
      <div class="col-9 col-sm-7">
        <button id="play" type="button" class="btn btn-danger btn-md">
          <i class="fa-solid fa-play"></i>
        </button>
        <button id="stop" type="button" class="btn btn-dark btn-md">
          <i class="fa-solid fa-stop"></i>
        </button>
        <button id="prev" type="button" class="btn btn-primary btn-md disabled"
          data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
          <i class="fa-solid fa-arrow-left"></i>
        </button>
        <button id="next" type="button" class="btn btn-primary btn-md" data-bs-target="#carouselExampleIndicators"
          data-bs-slide="next">
          <i class="fa-solid fa-arrow-right"></i>
        </button>
        <select id="voices" class="form-select-lg select mx-auto"></select>
        <select id="speed" class="form-select-lg select  mx-auto"></select>
        <button id="fullscreen" type="button" class="btn btn-primary btn-md">
          <i class="fa-solid fa-expand"></i>
        </button>
      </div>
      <div class="col-2 controls align-right">
        <input id="auto" class="check-input" type="checkbox" value="">
        <label class="form-check-label" for="check-input" style="margin-right: 15px;">
          Play On Next
        </label>
      </div>
      <div class="col">
        <div class="progress">
          <div id="progress" class="progress-bar bg-success" role="progressbar">
            0%</div>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"></script>
  <script type="text/javascript" src="../../js/course.js"></script>
</body>

</html>